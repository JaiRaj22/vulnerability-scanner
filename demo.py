import sqlite3
from flask import Flask, render_template, request, jsonify, redirect, render_template_string
import requests

app = Flask(__name__)

@app.route("/")
def home():
    return render_template("index.html")

@app.route("/cors-vulnerable")
def cors_vulnerable():
    response = jsonify(message="This route is vulnerable to CORS attacks.")
    response.headers.add("Access-Control-Allow-Origin", "*")
    return response

@app.route('/sql-injection', methods=['GET'])
def sql_injection():
    user_id = request.args.get('id')
    # Vulnerable SQL query
    query = f"SELECT * FROM users WHERE id = '{user_id}'"
    conn = sqlite3.connect('example.db')
    cursor = conn.cursor()
    cursor.execute(query)
    user = cursor.fetchone()
    conn.close()
    if user:
        return jsonify(user)
    else:
        return 'No user found', 404

@app.route('/open-redirect')
def open_redirect():
    # Get the URL parameter
    url = request.args.get('url')
    # Redirect to the URL provided without validation
    return redirect(url)

@app.route('/xss')
def xss():
    # Get the message parameter
    message = request.args.get('message', 'Hello, world!')
    # Render the message unsafely into HTML
    return render_template_string(f"<html><body>{message}</body></html>")

@app.route('/ssrf')
def ssrf():
    # Get the URL parameter
    url = request.args.get('url')
    # Make a request to the URL provided
    response = requests.get(url)
    return response.text

if __name__ == "__main__":
    app.run(debug=True, port=5000)
